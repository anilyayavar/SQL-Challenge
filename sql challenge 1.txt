-- Query 1
-- 1. What is the total amount each customer spent at the restaurant?

select customer_id, sum(price)
from dannys_diner.sales s
left join dannys_diner.menu m
using (product_id)
group by customer_id

"B"	74
"C"	36
"A"	76

-- query2
-- 2. How many days has each customer visited the restaurant?

select customer_id, count (distinct order_date)
from dannys_diner.sales 
group by customer_id

"A"	4
"B"	6
"C"	2


-- query 3
-- 3. What was the first item from the menu purchased by each customer?

WITH SQ as (
select *, dense_rank() 
	over (partition by customer_id 
		  order by order_date)  as ranks
	from dannys_diner.sales
)
select customer_id, order_date, product_name 
from sq
join dannys_diner.menu
using (product_id)
where ranks = 1
order by customer_id

"customer_id"	"order_date"	"product_name"
"A"	"2021-01-01"	"sushi"
"A"	"2021-01-01"	"curry"
"B"	"2021-01-01"	"curry"
"C"	"2021-01-01"	"ramen"
"C"	"2021-01-01"	"ramen"

-- query 4
-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

WITH SQ as (
	select product_id
	from dannys_diner.sales
	group by product_id
	order by count(*) desc
	limit 1
)
select customer_id, product_name, count(*) 
from dannys_diner.sales
join dannys_diner.menu
using (product_id)
where product_id in (select product_id from sq)
group by customer_id, product_name
order by customer_id


"customer_id"	"product_name"	"count"
"A"	"ramen"	3
"B"	"ramen"	2
"C"	"ramen"	3


-- query 5
-- 5. Which item was the most popular for each customer?

with sq as(
	select customer_id, product_id, count(*) as cnt, 
	dense_rank() over(partition by customer_id 
					  order by count(*) desc) as rnk
	from dannys_diner.sales
	group by customer_id, product_id)
select customer_id, product_name, cnt as number_of_times
from sq
join dannys_diner.menu
using(product_id)
where rnk = 1
order by customer_id

"customer_id"	"product_name"	"number_of_times"
"A"	"ramen"	3
"B"	"sushi"	2
"B"	"curry"	2
"B"	"ramen"	2
"C"	"ramen"	3

-- 6. Which item was purchased first by the customer after they became a member?

with sq as (
	select customer_id, order_date, join_date, product_id,
	dense_rank() over (partition by customer_id 
				   order by order_date) as rnk
	from dannys_diner.sales s
	join dannys_diner.members m
	using (customer_id)
	where order_date >= join_date
)
select customer_id, product_name
from sq
join dannys_diner.menu
using(product_id)
where rnk = 1
order by customer_id


"customer_id"	"product_name"
"A"	"curry"
"B"	"sushi"

-- 7. Which item was purchased just before the customer became a member?

with sq as (
	select customer_id, order_date, join_date, product_id,
	dense_rank() over (partition by customer_id 
				   order by order_date desc) as rnk
	from dannys_diner.sales s
	join dannys_diner.members m
	using (customer_id)
	where order_date < join_date
)
select customer_id, product_name
from sq
join dannys_diner.menu
using(product_id)
where rnk = 1
order by customer_id


"customer_id"	"product_name"
"A"	"sushi"
"A"	"curry"
"B"	"sushi"

-- 8. What is the total items and amount spent for each member before they became a member?

with sq as (
	select customer_id, order_date, join_date, product_id,
	 price
	from dannys_diner.sales s
	left join dannys_diner.members m
	using (customer_id)
	left join dannys_diner.menu m2
	using (product_id)
	where order_date < join_date or join_date is null
)
select customer_id, count (distinct product_id) as no_of_items,
sum(price) as amount_spent
from sq
group by customer_id
order by customer_id


"customer_id"	"no_of_items"	"amount_spent"
"A"	2	25
"B"	2	40
"C"	1	36

-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

select customer_id, 
 	sum((case when product_name = 'sushi' then 2
	 else 1 end) * price * 10) as rewards
from dannys_diner.sales s  
join dannys_diner.menu m
using (product_id)
group by customer_id
order by customer_id

"customer_id"	"rewards"
"A"	860
"B"	940
"C"	360

-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

select customer_id, 
	sum((case when (order_date between join_date 
	 and join_date +6) OR product_name = 'sushi'
	 then 2 else 1 end) * 10 * price ) as rewards_points
from dannys_diner.sales s
join dannys_diner.members m
using (customer_id)
join dannys_diner.menu m2
using (product_id)
where order_date <= '2021-01-31'
group by customer_id
order by customer_id

"customer_id"	"rewards_points"
"A"	1370
"B"	820
